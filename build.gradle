apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'jetty'
apply plugin: 'cobertura'
apply plugin: 'com.github.kt3k.coveralls'

// JDK 7
sourceCompatibility = 1.7
targetCompatibility = 1.7

version = '0.0.1'

buildscript {
	repositories {
	    mavenLocal()
	    mavenCentral()
		jcenter()
		// for coverall purpose
		dependencies {
	        classpath 'net.saliman:gradle-cobertura-plugin:2.0.0' // cobertura plugin
	        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
	    }
	}
}

dependencies {
 
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
	compile 'org.springframework.social:spring-social-core:1.1.2.RELEASE'
	compile 'org.springframework:spring-test:4.0.5.RELEASE'
	compile 'javax.servlet:jstl:1.2'
	compile 'org.springframework.boot:spring-boot-starter:1.2.4.RELEASE'
	compile 'org.springframework:spring-web:4.1.6.RELEASE'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.1.4'
	compile 'javax.validation:validation-api:1.0.0.GA'
	compile 'javax.validation:validation-api:1.0.0.GA'
	compile 'org.hibernate:hibernate-validator:4.2.0.Final'

	testCompile 'junit:junit:4.12'
	testCompile "org.mockito:mockito-core:1.+"
	
}

// Embeded Jetty for testing
jettyRun{
	contextPath = "technikfda"
	httpPort = 8080
}

jettyRunWar{
	contextPath = "technikfda"
	httpPort = 8080
}

//For Eclipse IDE only
eclipse {

  wtp {
    component {
      
      //define context path, default to project folder name
      contextPath = 'technikfda'
      
    }
    
  }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report

