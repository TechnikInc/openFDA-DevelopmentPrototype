// packaged as jerryRun, jettuRunWar or  war application
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'jetty'

// JDK 7
sourceCompatibility = 1.7
targetCompatibility = 1.7

version = '0.0.1'

// warfile name
war {
  archiveName = 'technikfda.war'
}

repositories {
    mavenLocal()
    mavenCentral()
	jcenter()
}

dependencies {
 
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
	compile 'org.springframework.social:spring-social-core:1.1.2.RELEASE'
	compile 'org.springframework:spring-test:4.0.5.RELEASE'
	compile 'javax.servlet:jstl:1.2'
	compile 'org.springframework.boot:spring-boot-starter:1.2.4.RELEASE'
	compile 'org.springframework:spring-web:4.1.6.RELEASE'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.1.4'
	compile 'javax.validation:validation-api:1.0.0.GA'
	compile 'org.hibernate:hibernate-validator:4.2.0.Final'

	testCompile 'junit:junit:4.12'
	testCompile "org.mockito:mockito-core:1.+"
	
	
	
}

// Embeded Jetty for testing locally
jettyRun{
	contextPath = "technikfda"
	httpPort = 8080
}

jettyRunWar{
	contextPath = "technikfda"
	httpPort = 8080
}

//For Eclipse IDE only
eclipse {
  wtp {
    component {
      //define context path, default to project folder name
      contextPath = 'technikfda'
      
    }
    
  }
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}


// build/libs directory is created Zip file to ship to AWS
// For AWS deployments, need to copy the appspec file 
task copyAWSAppSpec(type: Copy) {
  from 'appspec.yml'
  into 'build/libs'
}

// For AWS deployments, need to copy the tomcat_start/tomcat_stop scripts 
task copyTomcatScripts(type: Copy) {
  from 'tomcatscripts'
  into 'build/libs'
}

task grandExePermissionsToScripts(type: Exec) { 
   commandLine 'chmod', '+x', 'build/libs/*.sh'    
} 

// build the aws deployable package
task awsPackage(type: Zip) {
  from 'build/libs'
  archiveName = 'MyApp.zip'
}

println awsPackage.archiveName
println relativePath(awsPackage.destinationDir)
println relativePath(awsPackage.archivePath)

// build/libs directory is created Zip file to ship to AWS
awsPackage.dependsOn war
awsPackage.dependsOn copyAWSAppSpec
awsPackage.dependsOn copyTomcatScripts
awsPackage.dependsOn grandExePermissionsToScripts